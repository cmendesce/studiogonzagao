extends ../layout/layout

block append scripts
	script(src='/js/ods.js')
	script(src='/js/xlsx.core.min.js')
	script.
		$(function () {
			var input_dom_element = $('#batchRecords').get(0);
			function handleFile(e) {
				var files = e.target.files;
				var i,f;
				for (i = 0, f = files[i]; i != files.length; ++i) {
				var reader = new FileReader();
				var name = f.name;
				reader.onload = function(e) {
					var data = e.target.result;

					var workbook = XLSX.read(data, {type: 'binary'});

					var records = [];
					var index = 1;
					var record;
					while(index){
						record =  {
							label: workbook.Sheets.Plan1['A' + index].v.trim(),
							genre: workbook.Sheets.Plan1['B' + index].v.trim(),
							band: workbook.Sheets.Plan1['C' + index].v.trim(),
							year: workbook.Sheets.Plan1['D' + index].v,
							number: workbook.Sheets.Plan1['E' + index].v,
							name: workbook.Sheets.Plan1['F' + index].v.trim()
						};

						records.push(record);
						index = workbook.Sheets.Plan1.hasOwnProperty('A' + (index+1))? ++index : undefined;
					}
					
					var completed = 0;

					function addRecord(element) {
						debugger;
						$.get('batch/add',  
								{ record: JSON.stringify(element) }, 
							function (data) {
								completed++;
								var text = parseInt((completed/records.length) * 100) + '%';
								if (data)
									$('#progress').css({ width: text}).text(text);

								if (text !== '100%') {
									addRecord(records[completed]);
								}
							});
					}

					addRecord(records[completed]);

				};
				reader.readAsBinaryString(f);
				}
			}
			input_dom_element.addEventListener('change', handleFile, false);
		});

block content
	.container
		.row
			.col-xs-12
				h2 #{__("menu.records")}
		.row
			.col-xs-12
				input.form-control(type="file", id="batchRecords")
		.row
			.col-xs-12
				.progress
					#progress.progress-bar(role='progressbar', aria-valuenow='70', aria-valuemin='0', aria-valuemax='100', style="width: 0%")
						| 0%
